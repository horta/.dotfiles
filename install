#!/bin/bash

ORIG_DIR="$PWD"

function curr_file
{
    __SOURCE__="${BASH_SOURCE[0]}"
    while [[ -L ${__SOURCE__} ]]; do
        # shellcheck disable=SC1117
        __SOURCE__=$(find "${__SOURCE__}" -type l -ls | sed -n 's/^.* -> \(.*\)/\1/p')
    done
    echo "${__SOURCE__}"
}

function dir_path
{
    echo $(cd -P "$(dirname "$1")" && pwd)
}

__file__="${curr_file}"
__dir__=$(dir_path "${__file__}")

function cleanup
{
    exec 3>&-
    cd "$ORIG_DIR"
}
trap cleanup EXIT

pushd $__dir__ >/dev/null

function abort
{
    echo "ðŸ”¥ $@" 1>&2
    exit 1
}

# https://unix.stackexchange.com/a/174818
TMPDIR=$(dirname $(mktemp -u))

function download
{
    URL=$1
    NAME=$(basename $URL)
    SHA1=$2
    echo $NAME
    cd $TMPDIR
    curl --remote-name -# $URL
}

function exec_manifest_instr
{
    pushd $TMPDIR >/dev/null
    local url=$1
    local hsh=$2
    local dst=$3
    local filename=$(basename $url)
    download $url || abort "Failed to download $filename."
    echo "$hsh  $filename" >$filename.sha1
    sha1sum --quiet --check $filename.sha1 || abort "Hash failed for $filename."
    /bin/mv $filename $__dir__/$dst/ || abort "Failed to move $filename."
    chmod +x $__dir__/$dst/$filename || abort "Failed to chmod $filename."
    popd >/dev/null
}

while IFS= read -r line; do
    exec_manifest_instr $line
done <$__dir__/MANIFEST

[ -f home/.DS_Store ] && /bin/rm home/.DS_Store
[ -f home/bin/.DS_Store ] && /bin/rm home/bin/.DS_Store
[ -f home/bin/lsf/.DS_Store ] && /bin/rm home/bin/lsf/.DS_Store

stow -v -D home
stow -v home
