#!/bin/bash

function die
{
    echo "ðŸ”¥ $@" 1>&2
    exit 1
}

function cmd_exist
{
    command -v $1 2>&1 >/dev/null
}

function assert_cmd_exist
{
    if ! cmd_exist $1; then
        die "Command $1 not found. Please, install it first."
    fi
}

function download
{
    local url=$1
    local file=$(basename $url)
    local sha1=$2

    echo "Downloading $file..."
    curl --remote-name -# $url || die "Failed to download $file."
}

function manifest_download
{
    local url=$1
    local hsh=$2
    local dst="$PWD/build/$3"
    local filename=$(basename $url)

    local tmpdir=$(mktemp -d 2>/dev/null || mktemp -d -t 'dotfiles')
    pushd $tmpdir >/dev/null || die "Failed to cd $tmpdir."

    download $url || die "Failed to download $filename."
    echo "$hsh  $filename" >$filename.sha1

    /usr/bin/shasum --quiet --check $filename.sha1 || die "Failed to hash $filename."

    /bin/mv $filename $dst/ || die "Failed to move $filename."
    /bin/chmod +x $dst/$filename || die "Failed to chmod $filename."

    popd >/dev/null
}

function setup_build_dir
{
    [ -d build ] && /bin/rm -rf build
    /bin/mkdir build || die "Could not create build directory."
    /bin/cp -r home build/home || die "Could not copy home directory."
}

function sys_set
{
    local name=$1
    local value=$2
    sed -e "s/{$name}/$value/" -i.bak build/home/.sys.in
}
